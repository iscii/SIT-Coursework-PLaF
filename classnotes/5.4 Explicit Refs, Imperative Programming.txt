Ref definitions

the Store is the heap.

':=' is the overwrite operator for values in the store.
'<-' is the assignment operator for variables in the array.
    let a = Array.make("hello", 4);
    a.(0) <- "world";
    - : a = ["world", "hello", "hello", "hello"]
\sigma is the store/heap.https://chat.openai.com/c/b19529f9-63c0-401d-96bf-9c487782b38d

records are like objects. we can assign values to keys.
parser returns a Record type when parsing a record. 

parse "{cwid=102; age=23}";;
Record [("cwid", (false, Int 102)); ("age", (false, Int 23))]


no explicit refs in midterm

hw3:

CaseT(target,emptycase,id1,id2,id3,nodecase) ->
    eval_expr target >>=
    tree_of_treeVal >>= fun t ->
    (match t with
    | Empty -> eval_expr emptycase
    | Node(v,l,r) -> 
      extend_env id1 v >>+
      extend_env id2 (TreeVal(l)) >>+ 
      extend_env id3 (TreeVal(r)) >>+
      eval_expr nodecase
    )

why did we need to extend the env for node properties? i don't see anywhere where they check to match the properties
why not just match them here and return evel_expr nodecase? (i know it doesn't work; why?)